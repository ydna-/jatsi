package gui;

import logic.*;
import fileio.*;
import javax.swing.JOptionPane;

/**
 * Graafinen käyttöliittymä Yatzy-noppapelille.
 */
public class Jatsi extends javax.swing.JFrame {

    private Game jatsi;
    private Highscores highscores;
    private int numberOfPlayers;
    
    /**
     * Creates new form Jatsi
     */
    public Jatsi() {
        initComponents();
        this.jatsi = new Game();
        this.highscores = new Highscores("highscores.dat");
        this.Scorecard.setValueAt("Ones", 0, 0);
        this.Scorecard.setValueAt("Twos", 1, 0);
        this.Scorecard.setValueAt("Threes", 2, 0);
        this.Scorecard.setValueAt("Fours", 3, 0);
        this.Scorecard.setValueAt("Fives", 4, 0);
        this.Scorecard.setValueAt("Sixes", 5, 0);
        this.Scorecard.setValueAt("Upper total", 6, 0);
        this.Scorecard.setValueAt("Bonus", 7, 0);
        this.Scorecard.setValueAt("Pair", 8, 0);
        this.Scorecard.setValueAt("Two pairs", 9, 0);
        this.Scorecard.setValueAt("Three of a kind", 10, 0);
        this.Scorecard.setValueAt("Four of a kind", 11, 0);
        this.Scorecard.setValueAt("Small straight", 12, 0);
        this.Scorecard.setValueAt("Large straight", 13, 0);
        this.Scorecard.setValueAt("Full house", 14, 0);
        this.Scorecard.setValueAt("Chance", 15, 0);
        this.Scorecard.setValueAt("Yatzy", 16, 0);
        this.Scorecard.setValueAt("TOTAL", 17, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numberDialog = new javax.swing.JDialog();
        jSlider1 = new javax.swing.JSlider();
        OKButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Scorecard = new javax.swing.JTable();
        rollButton = new javax.swing.JButton();
        dieButton1 = new javax.swing.JToggleButton();
        dieButton2 = new javax.swing.JToggleButton();
        dieButton3 = new javax.swing.JToggleButton();
        dieButton4 = new javax.swing.JToggleButton();
        dieButton5 = new javax.swing.JToggleButton();
        menuBar = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        newGameMenuItem = new javax.swing.JMenuItem();
        highScoresMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        numberDialog.setMinimumSize(new java.awt.Dimension(260, 160));
        numberDialog.setModal(true);
        numberDialog.setPreferredSize(new java.awt.Dimension(260, 160));
        numberDialog.setResizable(false);

        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(6);
        jSlider1.setMinimum(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(1);

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("How many players wish to play?");

        javax.swing.GroupLayout numberDialogLayout = new javax.swing.GroupLayout(numberDialog.getContentPane());
        numberDialog.getContentPane().setLayout(numberDialogLayout);
        numberDialogLayout.setHorizontalGroup(
            numberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numberDialogLayout.createSequentialGroup()
                .addGroup(numberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(numberDialogLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(numberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(numberDialogLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(OKButton)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        numberDialogLayout.setVerticalGroup(
            numberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numberDialogLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OKButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusableWindowState(false);

        Scorecard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Player 1", "Player 2", "Player 3", "Player 4", "Player 5", "Player 6"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scorecard.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Scorecard);

        rollButton.setText("Roll!");
        rollButton.setEnabled(false);
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        dieButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton1ActionPerformed(evt);
            }
        });

        dieButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton2ActionPerformed(evt);
            }
        });

        dieButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton3ActionPerformed(evt);
            }
        });

        dieButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton4ActionPerformed(evt);
            }
        });

        dieButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton5ActionPerformed(evt);
            }
        });

        Menu.setText("File");

        newGameMenuItem.setText("New game");
        newGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameMenuItemActionPerformed(evt);
            }
        });
        Menu.add(newGameMenuItem);

        highScoresMenuItem.setText("High scores");
        highScoresMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highScoresMenuItemActionPerformed(evt);
            }
        });
        Menu.add(highScoresMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        Menu.add(exitMenuItem);

        menuBar.add(Menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 177, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dieButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(177, 177, 177))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dieButton1)
                    .addComponent(dieButton2)
                    .addComponent(dieButton3)
                    .addComponent(dieButton4)
                    .addComponent(dieButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rollButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
        jatsi.rollDice();
        jatsi.turn++;
        dieButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[0].getValue() + ".png")));
        dieButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[1].getValue() + ".png")));
        dieButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[2].getValue() + ".png")));
        dieButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[3].getValue() + ".png")));
        dieButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[4].getValue() + ".png")));
        if (jatsi.turn == 3) {
            jatsi.turn = 0;
            rollButton.setEnabled(false);
            String combination = JOptionPane.showInputDialog("Which combination do you want to use?");
            while (jatsi.players.get(jatsi.player).getScores().getScore(combination) != -1) {
                combination = JOptionPane.showInputDialog("Please enter a valid combination!");
            }
            int score = jatsi.putScore(combination, jatsi.players.get(jatsi.player));
            Scorecard.setValueAt(score, Calculator.combinationToInteger(combination), jatsi.player+1);
            if (jatsi.dice[0].isLocked()) {
                dieButton1.setSelected(false);
            }
            if (jatsi.dice[1].isLocked()) {
                dieButton2.setSelected(false);
            }
            if (jatsi.dice[2].isLocked()) {
                dieButton3.setSelected(false);
            }
            if (jatsi.dice[3].isLocked()) {
                dieButton4.setSelected(false);
            }
            if (jatsi.dice[4].isLocked()) {
                dieButton5.setSelected(false);
            }
            if (!(jatsi.counter == 14 && jatsi.player == jatsi.players.size()-1)) {
                System.out.println(jatsi.counter + " " + jatsi.player);
                jatsi.freeDice();
                jatsi.nextPlayer();
                rollButton.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Game over!");
                int winner = 0;
                int winningScore = 0;
                for (int i = 0; i < numberOfPlayers; i++) {
                    jatsi.players.get(i).getScores().setUpperTotal();
                    jatsi.players.get(i).getScores().setTotal();
                    if (score < jatsi.players.get(i).getScores().getScore("total")) {
                        winner = i;
                        winningScore = jatsi.players.get(i).getScores().getScore("total");
                    }
                    Scorecard.setValueAt(jatsi.players.get(i).getScores().getScore("upper total"), 6, i+1);
                    Scorecard.setValueAt(jatsi.players.get(i).getScores().getScore("bonus"), 7, i+1);
                    Scorecard.setValueAt(jatsi.players.get(i).getScores().getScore("total"), 17, i+1);
                    highscores.addScore(jatsi.players.get(i).getName(), jatsi.players.get(i).getScores().getScore("total"));
                }
                JOptionPane.showMessageDialog(null, jatsi.players.get(winner).getName() + "won with " + winningScore + " points!");
            }
        }
    }//GEN-LAST:event_rollButtonActionPerformed

    private void dieButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton1ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[0].toggle();
        } else {
            dieButton1.setSelected(false);
        }
    }//GEN-LAST:event_dieButton1ActionPerformed

    private void dieButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton2ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[1].toggle();
        } else {
            dieButton2.setSelected(false);
        }
    }//GEN-LAST:event_dieButton2ActionPerformed

    private void dieButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton3ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[2].toggle();
        } else {
            dieButton3.setSelected(false);
        }
    }//GEN-LAST:event_dieButton3ActionPerformed

    private void dieButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton4ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[3].toggle();
        } else {
            dieButton4.setSelected(false);
        }
    }//GEN-LAST:event_dieButton4ActionPerformed

    private void dieButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton5ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[4].toggle();
        } else {
            dieButton5.setSelected(false);
        }
    }//GEN-LAST:event_dieButton5ActionPerformed

    private void highScoresMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highScoresMenuItemActionPerformed
        JOptionPane.showMessageDialog(null, highscores);
    }//GEN-LAST:event_highScoresMenuItemActionPerformed

    private void newGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameMenuItemActionPerformed
        numberDialog.setVisible(true);
    }//GEN-LAST:event_newGameMenuItemActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        numberDialog.dispose();
        numberOfPlayers = jSlider1.getValue();
        String name;
        for (int i = 0; i < numberOfPlayers; i++) {
            name = JOptionPane.showInputDialog("Player " + (i+1) + ", please enter your name:");
            jatsi.addPlayer(name);
            Scorecard.getColumnModel().getColumn(i+1).setHeaderValue(name);
        }
        rollButton.setEnabled(true);
    }//GEN-LAST:event_OKButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jatsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jatsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jatsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jatsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jatsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu;
    private javax.swing.JButton OKButton;
    private javax.swing.JTable Scorecard;
    private javax.swing.JToggleButton dieButton1;
    private javax.swing.JToggleButton dieButton2;
    private javax.swing.JToggleButton dieButton3;
    private javax.swing.JToggleButton dieButton4;
    private javax.swing.JToggleButton dieButton5;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem highScoresMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newGameMenuItem;
    private javax.swing.JDialog numberDialog;
    private javax.swing.JButton rollButton;
    // End of variables declaration//GEN-END:variables
}
