package gui;

import logic.*;
import fileio.*;

/**
 * Graphical user interface for the dice game Jatsi.
 */
public class JatsiGUI extends javax.swing.JFrame {

    /**
     * Instance of the game.
     */
    private Game jatsi;
    
    /**
     * High score list of the game.
     */
    private final Highscores highscores;
    
    /**
     * Array of dice combinations.
     */
    private final String[] diceCombinations = {"Ones", "Twos", "Threes", "Fours", "Fives", "Sixes",
        "Pair", "Two Pairs", "Three of a Kind", "Four of a Kind", "Small Straight", "Large Straight",
        "Full House", "Chance", "Yatzy"};
    
    /**
     * Class constructor.
     */
    public JatsiGUI() {
        initComponents();
        this.jatsi = new Game();
        this.highscores = new Highscores("highscores.dat");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        Scorecard = new javax.swing.JTable();
        rollButton = new javax.swing.JButton();
        dieButton1 = new javax.swing.JToggleButton();
        dieButton2 = new javax.swing.JToggleButton();
        dieButton3 = new javax.swing.JToggleButton();
        dieButton4 = new javax.swing.JToggleButton();
        dieButton5 = new javax.swing.JToggleButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        newGameMenuItem = new javax.swing.JMenuItem();
        highScoresMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusableWindowState(false);

        Scorecard.setBackground(new java.awt.Color(238, 238, 238));
        Scorecard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Combination", "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scorecard.getTableHeader().setReorderingAllowed(false);
        jScrollPane.setViewportView(Scorecard);
        if (Scorecard.getColumnModel().getColumnCount() > 0) {
            Scorecard.getColumnModel().getColumn(0).setResizable(false);
            Scorecard.getColumnModel().getColumn(1).setResizable(false);
            Scorecard.getColumnModel().getColumn(2).setResizable(false);
            Scorecard.getColumnModel().getColumn(3).setResizable(false);
            Scorecard.getColumnModel().getColumn(4).setResizable(false);
            Scorecard.getColumnModel().getColumn(5).setResizable(false);
            Scorecard.getColumnModel().getColumn(6).setResizable(false);
        }
        Scorecard.setValueAt("Ones", 0, 0);
        Scorecard.setValueAt("Twos", 1, 0);
        Scorecard.setValueAt("Threes", 2, 0);
        Scorecard.setValueAt("Fours", 3, 0);
        Scorecard.setValueAt("Fives", 4, 0);
        Scorecard.setValueAt("Sixes", 5, 0);
        Scorecard.setValueAt("Upper Total", 6, 0);
        Scorecard.setValueAt("Bonus", 7, 0);
        Scorecard.setValueAt("Pair", 8, 0);
        Scorecard.setValueAt("Two Pairs", 9, 0);
        Scorecard.setValueAt("Three of a Kind", 10, 0);
        Scorecard.setValueAt("Four of a Kind", 11, 0);
        Scorecard.setValueAt("Small Straight", 12, 0);
        Scorecard.setValueAt("Large Straight", 13, 0);
        Scorecard.setValueAt("Full House", 14, 0);
        Scorecard.setValueAt("Chance", 15, 0);
        Scorecard.setValueAt("Yatzy", 16, 0);
        Scorecard.setValueAt("TOTAL", 17, 0);

        rollButton.setText("Roll!");
        rollButton.setEnabled(false);
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        dieButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton1ActionPerformed(evt);
            }
        });

        dieButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton2ActionPerformed(evt);
            }
        });

        dieButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton3ActionPerformed(evt);
            }
        });

        dieButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton4ActionPerformed(evt);
            }
        });

        dieButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_1.png"))); // NOI18N
        dieButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dieButton5ActionPerformed(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(238, 238, 238));

        jTextField2.setBackground(new java.awt.Color(238, 238, 238));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jatsi.png"))); // NOI18N

        Menu.setText("File");

        newGameMenuItem.setText("New game");
        newGameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameMenuItemActionPerformed(evt);
            }
        });
        Menu.add(newGameMenuItem);

        highScoresMenuItem.setText("High scores");
        highScoresMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highScoresMenuItemActionPerformed(evt);
            }
        });
        Menu.add(highScoresMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        Menu.add(exitMenuItem);

        menuBar.add(Menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dieButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dieButton1)
                    .addComponent(dieButton2)
                    .addComponent(dieButton3)
                    .addComponent(dieButton4)
                    .addComponent(dieButton5)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rollButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed
    
    private void setDieButtonIcons() {
        dieButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[0].getValue() + ".png")));
        dieButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[1].getValue() + ".png")));
        dieButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[2].getValue() + ".png")));
        dieButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[3].getValue() + ".png")));
        dieButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die_" + jatsi.dice[4].getValue() + ".png")));
    }
    
    private void unselectDieButtons() {
        if (jatsi.dice[0].isLocked()) {
            dieButton1.setSelected(false);
        }
        if (jatsi.dice[1].isLocked()) {
            dieButton2.setSelected(false);
        }
        if (jatsi.dice[2].isLocked()) {
            dieButton3.setSelected(false);
        }
        if (jatsi.dice[3].isLocked()) {
            dieButton4.setSelected(false);
        }
        if (jatsi.dice[4].isLocked()) {
            dieButton5.setSelected(false);
        }
    }
    
    private java.util.ArrayList<String> availableCombinations() {
        java.util.ArrayList<String> list = new java.util.ArrayList<>();
        for (int i = 0; i < diceCombinations.length; i++) {
            if (jatsi.players.get(jatsi.player).getScores().getScore(diceCombinations[i]) == -1) {
                list.add(diceCombinations[i]);
            }
        }
        return list;
    }
    
    private int indexOfBestCombination(java.util.ArrayList<String> list) {
        int index = 0;
        int max = 0;
        int[] numbers = new int[5];
        for (int i = 0; i < 5; i++) {
            numbers[i] = jatsi.dice[i].getValue();
        }
        for (int i = 0; i < list.size(); i++) {
            if (Calculator.count(numbers, list.get(i)) > max) {
                index = i;
                max = Calculator.count(numbers, list.get(i));
            }
        }
        return index;
    }
    
    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
        jatsi.rollDice();
        if (jatsi.turn != 2) {
            jTextField2.setText("You have " + (3-jatsi.turn) + " rolls left.");
        } else {
            jTextField2.setText("You have 1 roll left.");
        }
        setDieButtonIcons();
        if (jatsi.turn == 0) {
            rollButton.setEnabled(false);
            if (!jatsi.forced) {
                jTextField2.setText("You have 0 rolls left.");
                java.util.ArrayList<String> list = availableCombinations();
                int index = indexOfBestCombination(list);
                Object[] combinations = list.toArray();
                String combination = null;
                while (combination == null) {
                    combination = (String) javax.swing.JOptionPane.showInputDialog(rootPane, 
                            "Which combination do you want to use?", "Dice combination", 
                            javax.swing.JOptionPane.QUESTION_MESSAGE, null, 
                            combinations, combinations[index]);
                }
                int score = jatsi.putScore(combination);
                Scorecard.setValueAt(score, Scores.combinationToInteger(combination), jatsi.player+1);
            } else {
                int score = jatsi.putScore(diceCombinations[jatsi.counter]);
                Scorecard.setValueAt(score, Scores.combinationToInteger(diceCombinations[jatsi.counter]), jatsi.player+1);
            }
            unselectDieButtons();
            if (!(jatsi.counter == 14 && jatsi.player == jatsi.players.size()-1)) {
                jatsi.freeDice();
                rollButton.setEnabled(true);
                jTextField1.setText(jatsi.players.get(jatsi.player).getName() + ", it's your turn to roll.");
                jTextField2.setText("You have 3 rolls left.");
            } else {
                int winner = jatsi.endGame();
                for (int i = 0; i < jatsi.players.size(); i++) {
                    Scorecard.setValueAt(jatsi.players.get(i).getScores().getScore("upper total"), 6, i+1);
                    Scorecard.setValueAt(jatsi.players.get(i).getScores().getScore("bonus"), 7, i+1);
                    Scorecard.setValueAt(jatsi.players.get(i).getScores().getScore("total"), 17, i+1);
                    try {
                        highscores.addScore(jatsi.players.get(i).getName(), 
                                jatsi.players.get(i).getScores().getScore("total"));
                    } catch (Exception e) {
                        javax.swing.JOptionPane.showMessageDialog(rootPane, "Error! " + e.getMessage());
                    }
                }
                jTextField1.setText("Game over!");
                jTextField2.setText(jatsi.players.get(winner).getName() + " won with " + 
                        jatsi.players.get(winner).getScores().getScore("total") + " points!");
            }
        }
    }//GEN-LAST:event_rollButtonActionPerformed

    private void dieButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton1ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[0].toggle();
        } else {
            dieButton1.setSelected(false);
        }
    }//GEN-LAST:event_dieButton1ActionPerformed

    private void dieButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton2ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[1].toggle();
        } else {
            dieButton2.setSelected(false);
        }
    }//GEN-LAST:event_dieButton2ActionPerformed

    private void dieButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton3ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[2].toggle();
        } else {
            dieButton3.setSelected(false);
        }
    }//GEN-LAST:event_dieButton3ActionPerformed

    private void dieButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton4ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[3].toggle();
        } else {
            dieButton4.setSelected(false);
        }
    }//GEN-LAST:event_dieButton4ActionPerformed

    private void dieButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dieButton5ActionPerformed
        if (jatsi.turn != 0) {
            jatsi.dice[4].toggle();
        } else {
            dieButton5.setSelected(false);
        }
    }//GEN-LAST:event_dieButton5ActionPerformed
    
    private void highScoresMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highScoresMenuItemActionPerformed
        javax.swing.JOptionPane.showMessageDialog(rootPane, highscores);
    }//GEN-LAST:event_highScoresMenuItemActionPerformed

    private void newGameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameMenuItemActionPerformed
        this.jatsi = new Game();
        String[] values = {"1", "2", "3", "4", "5", "6"};
        String number = (String) javax.swing.JOptionPane.showInputDialog(rootPane, 
                "How many players wish to play?", "Number of players", 
                javax.swing.JOptionPane.QUESTION_MESSAGE, null, values, values[0]);
        if (number == null) {
            return;
        }
        int numberOfPlayers = Integer.parseInt(number);
        String name = "";
        for (int i = 0; i < numberOfPlayers; i++) {
            while (name.equals("")) {
                name = javax.swing.JOptionPane.showInputDialog(rootPane, 
                        "Player " + (i+1) + ", please enter your name.");
                if (name == null) {
                    return;
                }
            }
            jatsi.addPlayer(name);
            Scorecard.getTableHeader().getColumnModel().getColumn(i+1).setHeaderValue(name);
            Scorecard.getTableHeader().repaint();
            name = "";
        }
        for (int i = 0; i < 18; i++) {
            for (int j = 1; j < 7; j++) {
                Scorecard.setValueAt("", i, j);
            }
        }
        String[] choices = {"Perusjatsi", "Pakkojatsi"};
        int response = javax.swing.JOptionPane.showOptionDialog(rootPane, 
                "Please choose game mode.", "Game mode", 
                javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, 
                null, choices, choices[0]);
        if (response != 0) {
            jatsi.forced = true;
        }
        rollButton.setEnabled(true);
        jTextField1.setText(jatsi.players.get(jatsi.player).getName() + ", it's your turn to roll.");
        jTextField2.setText("You have 3 rolls left.");
    }//GEN-LAST:event_newGameMenuItemActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JatsiGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu;
    private javax.swing.JTable Scorecard;
    private javax.swing.JToggleButton dieButton1;
    private javax.swing.JToggleButton dieButton2;
    private javax.swing.JToggleButton dieButton3;
    private javax.swing.JToggleButton dieButton4;
    private javax.swing.JToggleButton dieButton5;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem highScoresMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newGameMenuItem;
    private javax.swing.JButton rollButton;
    // End of variables declaration//GEN-END:variables
}
